// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`compile > should render container content in md correctly 1`] = `
"<div>
  <div>TIP</div>
  <div>
    <p>First line <code>block</code></p>
    <p>Second line <code>block2</code></p>
  </div>
</div>
<div>
  <div>TIP</div>
  <div>
    <ul>
      <li>List item 1 <code>block</code>。</li>
      <li>List item 2 <code>block2</code>。</li>
    </ul>
  </div>
</div>
<div>
  <div>TIP</div>
  <div>
    <p>Some code:</p>
    <pre><code>console.log('hello world');
</code></pre>
  </div>
</div>
<ol>
  <li>
    <p>Title 1</p>
    <div>
      <div>TIP</div>
      <div><p>This is a tip.</p></div>
    </div>
  </li>
</ol>
<ul>
  <li>
    <p>Title 2</p>
    <div>
      <div>NOTE</div>
      <div><p>This is a note.</p></div>
    </div>
  </li>
</ul>
"
`;

exports[`compile > should render container content in md correctly 2`] = `
"import { useMDXComponents as _provideComponents } from "@mdx-js/react";
function _createMdxContent(props) {
  const _components = Object.assign(
    {
      div: "div",
      p: "p",
      code: "code",
      ul: "ul",
      li: "li",
      pre: "pre",
      ol: "ol",
    },
    _provideComponents(),
    props.components
  );
  return (
    <>
      <_components.div className="rspress-directive tip">
        <_components.div className="rspress-directive-title">
          {"TIP"}
        </_components.div>
        <_components.div className="rspress-directive-content">
          <_components.p>
            {"First line "}
            <_components.code>{"block"}</_components.code>
          </_components.p>
          {"\\n"}
          <_components.p>
            {"Second line "}
            <_components.code>{"block2"}</_components.code>
            {"\\n"}
          </_components.p>
        </_components.div>
      </_components.div>
      {"\\n"}
      <_components.div className="rspress-directive tip">
        <_components.div className="rspress-directive-title">
          {"TIP"}
        </_components.div>
        <_components.div className="rspress-directive-content">
          {"\\n"}
          <_components.ul>
            {"\\n"}
            <_components.li>
              {"List item 1 "}
              <_components.code>{"block"}</_components.code>
              {"。"}
            </_components.li>
            {"\\n"}
            <_components.li>
              {"List item 2 "}
              <_components.code>{"block2"}</_components.code>
              {"。"}
            </_components.li>
            {"\\n"}
          </_components.ul>
          {"\\n"}
        </_components.div>
      </_components.div>
      {"\\n"}
      <_components.div className="rspress-directive tip">
        <_components.div className="rspress-directive-title">
          {"TIP"}
        </_components.div>
        <_components.div className="rspress-directive-content">
          {"\\n"}
          <_components.p>{"Some code:"}</_components.p>
          {"\\n"}
          <_components.pre>
            <_components.code className="language-ts">
              {"console.log('hello world');\\n"}
            </_components.code>
          </_components.pre>
          {"\\n"}
        </_components.div>
      </_components.div>
      {"\\n"}
      <_components.ol>
        {"\\n"}
        <_components.li>
          {"\\n"}
          <_components.p>{"Title 1"}</_components.p>
          {"\\n"}
          <_components.div className="rspress-directive tip">
            <_components.div className="rspress-directive-title">
              {"TIP"}
            </_components.div>
            <_components.div className="rspress-directive-content">
              <_components.p>{"This is a tip."}</_components.p>
            </_components.div>
          </_components.div>
          {"\\n"}
        </_components.li>
        {"\\n"}
      </_components.ol>
      {"\\n"}
      <_components.ul>
        {"\\n"}
        <_components.li>
          {"\\n"}
          <_components.p>{"Title 2"}</_components.p>
          {"\\n"}
          <_components.div className="rspress-directive note">
            <_components.div className="rspress-directive-title">
              {"NOTE"}
            </_components.div>
            <_components.div className="rspress-directive-content">
              <_components.p>{"This is a note."}</_components.p>
            </_components.div>
          </_components.div>
          {"\\n"}
        </_components.li>
        {"\\n"}
      </_components.ul>
    </>
  );
}
function MDXContent(props = {}) {
  const { wrapper: MDXLayout } = Object.assign(
    {},
    _provideComponents(),
    props.components
  );
  return MDXLayout ? (
    <MDXLayout {...props}>
      <_createMdxContent {...props} />
    </MDXLayout>
  ) : (
    _createMdxContent(props)
  );
}
export default MDXContent;
"
`;

exports[`compile > should render container content in mdx correctly 1`] = `
"<div>
  <div>TIP</div>
  <div>
    <p>First line <code>block</code></p>
    <p>Second line <code>block2</code></p>
  </div>
</div>
<div>
  <div>TIP</div>
  <div>
    <ul>
      <li>List item 1 <code>block</code>。</li>
      <li>List item 2 <code>block2</code>。</li>
    </ul>
  </div>
</div>
<div>
  <div>TIP</div>
  <div>
    <p>Some code:</p>
    <pre><code>console.log('hello world');
</code></pre>
  </div>
</div>
<ol>
  <li>
    <p>Title 1</p>
    <div>
      <div>TIP</div>
      <div><p>This is a tip.</p></div>
    </div>
  </li>
</ol>
<ul>
  <li>
    <p>Title 2</p>
    <div>
      <div>NOTE</div>
      <div><p>This is a note.</p></div>
    </div>
  </li>
</ul>
"
`;

exports[`compile > should render container content in mdx correctly 2`] = `
"import { useMDXComponents as _provideComponents } from "@mdx-js/react";
function _createMdxContent(props) {
  const _components = Object.assign(
      {
        div: "div",
        p: "p",
        code: "code",
        ul: "ul",
        li: "li",
        pre: "pre",
        ol: "ol",
      },
      _provideComponents(),
      props.components
    ),
    { Steps } = _components;
  if (!Steps) _missingMdxReference("Steps", true, "36:1-50:9");
  return (
    <>
      <_components.div className="rspress-directive tip">
        <_components.div className="rspress-directive-title">
          {"TIP"}
        </_components.div>
        <_components.div className="rspress-directive-content">
          <_components.p>
            {"First line "}
            <_components.code>{"block"}</_components.code>
          </_components.p>
          {"\\n"}
          <_components.p>
            {"Second line "}
            <_components.code>{"block2"}</_components.code>
            {"\\n"}
          </_components.p>
        </_components.div>
      </_components.div>
      {"\\n"}
      <_components.div className="rspress-directive tip">
        <_components.div className="rspress-directive-title">
          {"TIP"}
        </_components.div>
        <_components.div className="rspress-directive-content">
          {"\\n"}
          <_components.ul>
            {"\\n"}
            <_components.li>
              {"List item 1 "}
              <_components.code>{"block"}</_components.code>
              {"。"}
            </_components.li>
            {"\\n"}
            <_components.li>
              {"List item 2 "}
              <_components.code>{"block2"}</_components.code>
              {"。"}
            </_components.li>
            {"\\n"}
          </_components.ul>
          {"\\n"}
        </_components.div>
      </_components.div>
      {"\\n"}
      <_components.div className="rspress-directive tip">
        <_components.div className="rspress-directive-title">
          {"TIP"}
        </_components.div>
        <_components.div className="rspress-directive-content">
          {"\\n"}
          <_components.p>{"Some code:"}</_components.p>
          {"\\n"}
          <_components.pre>
            <_components.code className="language-ts">
              {"console.log('hello world');\\n"}
            </_components.code>
          </_components.pre>
          {"\\n"}
        </_components.div>
      </_components.div>
      {"\\n"}
      <_components.ol>
        {"\\n"}
        <_components.li>
          {"\\n"}
          <_components.p>{"Title 1"}</_components.p>
          {"\\n"}
          <_components.div className="rspress-directive tip">
            <_components.div className="rspress-directive-title">
              {"TIP"}
            </_components.div>
            <_components.div className="rspress-directive-content">
              <_components.p>{"This is a tip."}</_components.p>
            </_components.div>
          </_components.div>
          {"\\n"}
        </_components.li>
        {"\\n"}
      </_components.ol>
      {"\\n"}
      <_components.ul>
        {"\\n"}
        <_components.li>
          {"\\n"}
          <_components.p>{"Title 2"}</_components.p>
          {"\\n"}
          <_components.div className="rspress-directive note">
            <_components.div className="rspress-directive-title">
              {"NOTE"}
            </_components.div>
            <_components.div className="rspress-directive-content">
              <_components.p>{"This is a note."}</_components.p>
            </_components.div>
          </_components.div>
          {"\\n"}
        </_components.li>
        {"\\n"}
      </_components.ul>
      {"\\n"}
      <Steps>
        <_components.ol>
          {"\\n"}
          <_components.li>
            {"\\n"}
            <_components.p>{"Title 3"}</_components.p>
            {"\\n"}
            <_components.div className="rspress-directive warning">
              <_components.div className="rspress-directive-title">
                {"WARNING"}
              </_components.div>
              <_components.div className="rspress-directive-content">
                <_components.p>{"This is a warning."}</_components.p>
              </_components.div>
            </_components.div>
            {"\\n"}
          </_components.li>
          {"\\n"}
        </_components.ol>
        <_components.ul>
          {"\\n"}
          <_components.li>
            {"\\n"}
            <_components.p>{"Title 4"}</_components.p>
            {"\\n"}
            <_components.div className="rspress-directive danger">
              <_components.div className="rspress-directive-title">
                {"DANGER"}
              </_components.div>
              <_components.div className="rspress-directive-content">
                <_components.p>{"This is a danger."}</_components.p>
              </_components.div>
            </_components.div>
            {"\\n"}
          </_components.li>
          {"\\n"}
        </_components.ul>
      </Steps>
    </>
  );
}
function MDXContent(props = {}) {
  const { wrapper: MDXLayout } = Object.assign(
    {},
    _provideComponents(),
    props.components
  );
  return MDXLayout ? (
    <MDXLayout {...props}>
      <_createMdxContent {...props} />
    </MDXLayout>
  ) : (
    _createMdxContent(props)
  );
}
export default MDXContent;
function _missingMdxReference(id, component, place) {
  throw new Error(
    "Expected " +
      (component ? "component" : "object") +
      " \`" +
      id +
      "\` to be defined: you likely forgot to import, pass, or provide it." +
      (place
        ? "\\nIt’s referenced in your code at \`" +
          place +
          "\` in \`container-content.mdx\`"
        : "")
  );
}
"
`;

exports[`compile > should render container title in md correctly 1`] = `
"<h2 id="custom-title">
  Container Title<a aria-hidden="true" href="#custom-title">#</a>
</h2>
<div>
  <div>Custom Title</div>
  <div>
    <p>This is a <code>block</code> of <code>Custom Title</code></p>
  </div>
</div>
<div>
  <div>Custom Title</div>
  <div>
    <p>This is a <code>block</code> of <code>Custom Title</code></p>
  </div>
</div>
<div>
  <div>Custom Title</div>
  <div>
    <p>This is a <code>block</code> of <code>Custom Title</code></p>
  </div>
</div>
<div>
  <div>Custom Title</div>
  <div>
    <p>This is a <code>block</code> of <code>Custom Title</code></p>
  </div>
</div>
"
`;

exports[`compile > should render container title in md correctly 2`] = `
"import { useMDXComponents as _provideComponents } from "@mdx-js/react";
function _createMdxContent(props) {
  const _components = Object.assign(
    {
      h2: "h2",
      a: "a",
      div: "div",
      p: "p",
      code: "code",
    },
    _provideComponents(),
    props.components
  );
  return (
    <>
      <_components.h2 id="custom-title">
        {"Container Title"}
        <_components.a
          className="header-anchor"
          aria-hidden="true"
          href="#custom-title"
        >
          {"#"}
        </_components.a>
      </_components.h2>
      {"\\n"}
      <_components.div className="rspress-directive tip">
        <_components.div className="rspress-directive-title">
          {"Custom Title"}
        </_components.div>
        <_components.div className="rspress-directive-content">
          <_components.p>
            {"This is a "}
            <_components.code>{"block"}</_components.code>
            {" of "}
            <_components.code>{"Custom Title"}</_components.code>
            {"\\n"}
          </_components.p>
        </_components.div>
      </_components.div>
      {"\\n"}
      <_components.div className="rspress-directive tip">
        <_components.div className="rspress-directive-title">
          {"Custom Title"}
        </_components.div>
        <_components.div className="rspress-directive-content">
          <_components.p>
            {"This is a "}
            <_components.code>{"block"}</_components.code>
            {" of "}
            <_components.code>{"Custom Title"}</_components.code>
            {"\\n"}
          </_components.p>
        </_components.div>
      </_components.div>
      {"\\n"}
      <_components.div className="rspress-directive tip">
        <_components.div className="rspress-directive-title">
          {"Custom Title"}
        </_components.div>
        <_components.div className="rspress-directive-content">
          <_components.p>
            {"This is a "}
            <_components.code>{"block"}</_components.code>
            {" of "}
            <_components.code>{"Custom Title"}</_components.code>
            {"\\n"}
          </_components.p>
        </_components.div>
      </_components.div>
      {"\\n"}
      <_components.div className="rspress-directive tip">
        <_components.div className="rspress-directive-title">
          {"Custom Title"}
        </_components.div>
        <_components.div className="rspress-directive-content">
          <_components.p>
            {"This is a "}
            <_components.code>{"block"}</_components.code>
            {" of "}
            <_components.code>{"Custom Title"}</_components.code>
            {"\\n"}
          </_components.p>
        </_components.div>
      </_components.div>
    </>
  );
}
function MDXContent(props = {}) {
  const { wrapper: MDXLayout } = Object.assign(
    {},
    _provideComponents(),
    props.components
  );
  return MDXLayout ? (
    <MDXLayout {...props}>
      <_createMdxContent {...props} />
    </MDXLayout>
  ) : (
    _createMdxContent(props)
  );
}
export default MDXContent;
"
`;

exports[`compile > should render container title in mdx correctly 1`] = `
"<h2 id="custom-title">
  Container Title <a aria-hidden="true" href="#custom-title">#</a>
</h2>
<div>
  <div>Custom Title</div>
  <div>
    <p>This is a <code>block</code> of <code>Custom Title</code></p>
  </div>
</div>
<div>
  <div>Custom Title</div>
  <div>
    <p>This is a <code>block</code> of <code>Custom Title</code></p>
  </div>
</div>
<div>
  <div>Custom Title</div>
  <div>
    <p>This is a <code>block</code> of <code>Custom Title</code></p>
  </div>
</div>
<div>
  <div>Custom Title</div>
  <div>
    <p>This is a <code>block</code> of <code>Custom Title</code></p>
  </div>
</div>
"
`;

exports[`compile > should render container title in mdx correctly 2`] = `
"import { useMDXComponents as _provideComponents } from "@mdx-js/react";
function _createMdxContent(props) {
  const _components = Object.assign(
    {
      h2: "h2",
      a: "a",
      div: "div",
      p: "p",
      code: "code",
    },
    _provideComponents(),
    props.components
  );
  return (
    <>
      <_components.h2 id="custom-title">
        {"Container Title "}
        <_components.a
          className="header-anchor"
          aria-hidden="true"
          href="#custom-title"
        >
          {"#"}
        </_components.a>
      </_components.h2>
      {"\\n"}
      <_components.div className="rspress-directive tip">
        <_components.div className="rspress-directive-title">
          {"Custom Title"}
        </_components.div>
        <_components.div className="rspress-directive-content">
          <_components.p>
            {"\\nThis is a "}
            <_components.code>{"block"}</_components.code>
            {" of "}
            <_components.code>{"Custom Title"}</_components.code>
            {"\\n"}
          </_components.p>
        </_components.div>
      </_components.div>
      {"\\n"}
      <_components.div className="rspress-directive tip">
        <_components.div className="rspress-directive-title">
          {"Custom Title"}
        </_components.div>
        <_components.div className="rspress-directive-content">
          <_components.p>
            {"\\nThis is a "}
            <_components.code>{"block"}</_components.code>
            {" of "}
            <_components.code>{"Custom Title"}</_components.code>
            {"\\n"}
          </_components.p>
        </_components.div>
      </_components.div>
      {"\\n"}
      <_components.div className="rspress-directive tip">
        <_components.div className="rspress-directive-title">
          {"Custom Title"}
        </_components.div>
        <_components.div className="rspress-directive-content">
          <_components.p>
            {"This is a "}
            <_components.code>{"block"}</_components.code>
            {" of "}
            <_components.code>{"Custom Title"}</_components.code>
            {"\\n"}
          </_components.p>
        </_components.div>
      </_components.div>
      {"\\n"}
      <_components.div className="rspress-directive tip">
        <_components.div className="rspress-directive-title">
          {"Custom Title"}
        </_components.div>
        <_components.div className="rspress-directive-content">
          <_components.p>
            {"This is a "}
            <_components.code>{"block"}</_components.code>
            {" of "}
            <_components.code>{"Custom Title"}</_components.code>
            {"\\n"}
          </_components.p>
        </_components.div>
      </_components.div>
    </>
  );
}
function MDXContent(props = {}) {
  const { wrapper: MDXLayout } = Object.assign(
    {},
    _provideComponents(),
    props.components
  );
  return MDXLayout ? (
    <MDXLayout {...props}>
      <_createMdxContent {...props} />
    </MDXLayout>
  ) : (
    _createMdxContent(props)
  );
}
export default MDXContent;
"
`;

exports[`compile > should render container type correctly 1`] = `
"<div>
  <div>TIP</div>
  <div>
    <p>This is a <code>block</code> of type <code>tip</code></p>
  </div>
</div>
<div>
  <div>INFO</div>
  <div>
    <p>This is a <code>block</code> of type <code>info</code></p>
  </div>
</div>
<div>
  <div>NOTE</div>
  <div>
    <p>This is a <code>block</code> of type <code>info</code></p>
  </div>
</div>
<div>
  <div>WARNING</div>
  <div>
    <p>This is a <code>block</code> of type <code>warning</code></p>
  </div>
</div>
<div>
  <div>DANGER</div>
  <div>
    <p>This is a <code>block</code> of type <code>danger</code></p>
  </div>
</div>
<div>
  <div>CAUTION</div>
  <div>
    <p>This is a <code>block</code> of type <code>danger</code></p>
  </div>
</div>
<details>
  <summary>DETAILS</summary>
  <div>
    <p>This is a <code>block</code> of type <code>details</code></p>
  </div>
</details>
"
`;

exports[`compile > should render container type correctly 2`] = `
"import { useMDXComponents as _provideComponents } from "@mdx-js/react";
function _createMdxContent(props) {
  const _components = Object.assign(
    {
      div: "div",
      p: "p",
      code: "code",
      details: "details",
      summary: "summary",
    },
    _provideComponents(),
    props.components
  );
  return (
    <>
      <_components.div className="rspress-directive tip">
        <_components.div className="rspress-directive-title">
          {"TIP"}
        </_components.div>
        <_components.div className="rspress-directive-content">
          <_components.p>
            {"This is a "}
            <_components.code>{"block"}</_components.code>
            {" of type "}
            <_components.code>{"tip"}</_components.code>
            {"\\n"}
          </_components.p>
        </_components.div>
      </_components.div>
      {"\\n"}
      <_components.div className="rspress-directive info">
        <_components.div className="rspress-directive-title">
          {"INFO"}
        </_components.div>
        <_components.div className="rspress-directive-content">
          <_components.p>
            {"This is a "}
            <_components.code>{"block"}</_components.code>
            {" of type "}
            <_components.code>{"info"}</_components.code>
            {"\\n"}
          </_components.p>
        </_components.div>
      </_components.div>
      {"\\n"}
      <_components.div className="rspress-directive note">
        <_components.div className="rspress-directive-title">
          {"NOTE"}
        </_components.div>
        <_components.div className="rspress-directive-content">
          <_components.p>
            {"This is a "}
            <_components.code>{"block"}</_components.code>
            {" of type "}
            <_components.code>{"info"}</_components.code>
            {"\\n"}
          </_components.p>
        </_components.div>
      </_components.div>
      {"\\n"}
      <_components.div className="rspress-directive warning">
        <_components.div className="rspress-directive-title">
          {"WARNING"}
        </_components.div>
        <_components.div className="rspress-directive-content">
          <_components.p>
            {"This is a "}
            <_components.code>{"block"}</_components.code>
            {" of type "}
            <_components.code>{"warning"}</_components.code>
            {"\\n"}
          </_components.p>
        </_components.div>
      </_components.div>
      {"\\n"}
      <_components.div className="rspress-directive danger">
        <_components.div className="rspress-directive-title">
          {"DANGER"}
        </_components.div>
        <_components.div className="rspress-directive-content">
          <_components.p>
            {"This is a "}
            <_components.code>{"block"}</_components.code>
            {" of type "}
            <_components.code>{"danger"}</_components.code>
            {"\\n"}
          </_components.p>
        </_components.div>
      </_components.div>
      {"\\n"}
      <_components.div className="rspress-directive caution">
        <_components.div className="rspress-directive-title">
          {"CAUTION"}
        </_components.div>
        <_components.div className="rspress-directive-content">
          <_components.p>
            {"This is a "}
            <_components.code>{"block"}</_components.code>
            {" of type "}
            <_components.code>{"danger"}</_components.code>
            {"\\n"}
          </_components.p>
        </_components.div>
      </_components.div>
      {"\\n"}
      <_components.details className="rspress-directive details">
        <_components.summary className="rspress-directive-title">
          {"DETAILS"}
        </_components.summary>
        <_components.div className="rspress-directive-content">
          <_components.p>
            {"This is a "}
            <_components.code>{"block"}</_components.code>
            {" of type "}
            <_components.code>{"details"}</_components.code>
            {"\\n"}
          </_components.p>
        </_components.div>
      </_components.details>
    </>
  );
}
function MDXContent(props = {}) {
  const { wrapper: MDXLayout } = Object.assign(
    {},
    _provideComponents(),
    props.components
  );
  return MDXLayout ? (
    <MDXLayout {...props}>
      <_createMdxContent {...props} />
    </MDXLayout>
  ) : (
    _createMdxContent(props)
  );
}
export default MDXContent;
"
`;

exports[`compile > should render container type with space correctly 1`] = `
"<div>
  <div>TIP</div>
  <div>
    <p>This is a <code>block</code> of type <code>tip</code></p>
  </div>
</div>
<div>
  <div>TIP</div>
  <div>
    <p>This is a <code>block</code> of type <code>tip</code></p>
  </div>
</div>
<div>
  <div>INFO</div>
  <div>
    <p>This is a <code>block</code> of type <code>info</code></p>
  </div>
</div>
<div>
  <div>NOTE</div>
  <div>
    <p>This is a <code>block</code> of type <code>info</code></p>
  </div>
</div>
<div>
  <div>WARNING</div>
  <div>
    <p>This is a <code>block</code> of type <code>warning</code></p>
  </div>
</div>
<div>
  <div>DANGER</div>
  <div>
    <p>This is a <code>block</code> of type <code>danger</code></p>
  </div>
</div>
<div>
  <div>CAUTION</div>
  <div>
    <p>This is a <code>block</code> of type <code>danger</code></p>
  </div>
</div>
"
`;

exports[`compile > should render container type with space correctly 2`] = `
"import { useMDXComponents as _provideComponents } from "@mdx-js/react";
function _createMdxContent(props) {
  const _components = Object.assign(
    {
      div: "div",
      p: "p",
      code: "code",
    },
    _provideComponents(),
    props.components
  );
  return (
    <>
      <_components.div className="rspress-directive tip">
        <_components.div className="rspress-directive-title">
          {"TIP"}
        </_components.div>
        <_components.div className="rspress-directive-content">
          <_components.p>
            {"This is a "}
            <_components.code>{"block"}</_components.code>
            {" of type "}
            <_components.code>{"tip"}</_components.code>
            {"\\n"}
          </_components.p>
        </_components.div>
      </_components.div>
      {"\\n"}
      <_components.div className="rspress-directive tip">
        <_components.div className="rspress-directive-title">
          {"TIP"}
        </_components.div>
        <_components.div className="rspress-directive-content">
          <_components.p>
            {"This is a "}
            <_components.code>{"block"}</_components.code>
            {" of type "}
            <_components.code>{"tip"}</_components.code>
            {"\\n"}
          </_components.p>
        </_components.div>
      </_components.div>
      {"\\n"}
      <_components.div className="rspress-directive info">
        <_components.div className="rspress-directive-title">
          {"INFO"}
        </_components.div>
        <_components.div className="rspress-directive-content">
          <_components.p>
            {"This is a "}
            <_components.code>{"block"}</_components.code>
            {" of type "}
            <_components.code>{"info"}</_components.code>
            {"\\n"}
          </_components.p>
        </_components.div>
      </_components.div>
      {"\\n"}
      <_components.div className="rspress-directive note">
        <_components.div className="rspress-directive-title">
          {"NOTE"}
        </_components.div>
        <_components.div className="rspress-directive-content">
          <_components.p>
            {"This is a "}
            <_components.code>{"block"}</_components.code>
            {" of type "}
            <_components.code>{"info"}</_components.code>
            {"\\n"}
          </_components.p>
        </_components.div>
      </_components.div>
      {"\\n"}
      <_components.div className="rspress-directive warning">
        <_components.div className="rspress-directive-title">
          {"WARNING"}
        </_components.div>
        <_components.div className="rspress-directive-content">
          <_components.p>
            {"This is a "}
            <_components.code>{"block"}</_components.code>
            {" of type "}
            <_components.code>{"warning"}</_components.code>
            {"\\n"}
          </_components.p>
        </_components.div>
      </_components.div>
      {"\\n"}
      <_components.div className="rspress-directive danger">
        <_components.div className="rspress-directive-title">
          {"DANGER"}
        </_components.div>
        <_components.div className="rspress-directive-content">
          <_components.p>
            {"This is a "}
            <_components.code>{"block"}</_components.code>
            {" of type "}
            <_components.code>{"danger"}</_components.code>
            {"\\n"}
          </_components.p>
        </_components.div>
      </_components.div>
      {"\\n"}
      <_components.div className="rspress-directive caution">
        <_components.div className="rspress-directive-title">
          {"CAUTION"}
        </_components.div>
        <_components.div className="rspress-directive-content">
          <_components.p>
            {"This is a "}
            <_components.code>{"block"}</_components.code>
            {" of type "}
            <_components.code>{"danger"}</_components.code>
            {"\\n"}
          </_components.p>
        </_components.div>
      </_components.div>
    </>
  );
}
function MDXContent(props = {}) {
  const { wrapper: MDXLayout } = Object.assign(
    {},
    _provideComponents(),
    props.components
  );
  return MDXLayout ? (
    <MDXLayout {...props}>
      <_createMdxContent {...props} />
    </MDXLayout>
  ) : (
    _createMdxContent(props)
  );
}
export default MDXContent;
"
`;

exports[`compile > should render github alerts correctly 1`] = `
"<div>
  <div>TIP</div>
  <div>
    <p>
      <strong>Helpful advice for doing things better or more easily.</strong>
    </p>
  </div>
</div>
<div>
  <div>NOTE</div>
  <div>
    <h1>Please read this note!</h1>
  </div>
</div>
<div>
  <div>WARNING</div>
  <div>
    <p>Use <code>dummy</code> instead of <code>demo</code></p>
  </div>
</div>
<div>
  <div>CAUTION</div>
  <div>
    <p>Use this code:-</p>
    <pre><code>console.log(69);
</code></pre>
  </div>
</div>
<details>
  <summary>DETAILS</summary>
  <div>
    <p>This is a <code>block</code> of type <code>details</code></p>
  </div>
</details>
"
`;

exports[`compile > should render github alerts correctly 2`] = `
"import { useMDXComponents as _provideComponents } from "@mdx-js/react";
function _createMdxContent(props) {
  const _components = Object.assign(
    {
      div: "div",
      p: "p",
      strong: "strong",
      h1: "h1",
      code: "code",
      pre: "pre",
      details: "details",
      summary: "summary",
    },
    _provideComponents(),
    props.components
  );
  return (
    <>
      <_components.div className="rspress-directive tip">
        <_components.div className="rspress-directive-title">
          {"TIP"}
        </_components.div>
        <_components.div className="rspress-directive-content">
          {"\\n"}
          <_components.p>
            <_components.strong>
              {"Helpful advice for doing things better or more easily."}
            </_components.strong>
          </_components.p>
          {"\\n"}
        </_components.div>
      </_components.div>
      {"\\n"}
      <_components.div className="rspress-directive note">
        <_components.div className="rspress-directive-title">
          {"NOTE"}
        </_components.div>
        <_components.div className="rspress-directive-content">
          {"\\n"}
          {"\\n"}
          <_components.h1>{"Please read this note!"}</_components.h1>
          {"\\n"}
        </_components.div>
      </_components.div>
      {"\\n"}
      <_components.div className="rspress-directive warning">
        <_components.div className="rspress-directive-title">
          {"WARNING"}
        </_components.div>
        <_components.div className="rspress-directive-content">
          {"\\n"}
          <_components.p>
            {"Use "}
            <_components.code>{"dummy"}</_components.code>
            {" instead of "}
            <_components.code>{"demo"}</_components.code>
          </_components.p>
          {"\\n"}
        </_components.div>
      </_components.div>
      {"\\n"}
      <_components.div className="rspress-directive caution">
        <_components.div className="rspress-directive-title">
          {"CAUTION"}
        </_components.div>
        <_components.div className="rspress-directive-content">
          {"\\n"}
          {"\\n"}
          <_components.p>{"Use this code:-"}</_components.p>
          {"\\n"}
          <_components.pre>
            <_components.code className="language-javascript">
              {"console.log(69);\\n"}
            </_components.code>
          </_components.pre>
          {"\\n"}
        </_components.div>
      </_components.div>
      {"\\n"}
      <_components.details className="rspress-directive details">
        <_components.summary className="rspress-directive-title">
          {"DETAILS"}
        </_components.summary>
        <_components.div className="rspress-directive-content">
          {"\\n"}
          <_components.p>
            {"This is a "}
            <_components.code>{"block"}</_components.code>
            {" of type "}
            <_components.code>{"details"}</_components.code>
          </_components.p>
          {"\\n"}
        </_components.div>
      </_components.details>
    </>
  );
}
function MDXContent(props = {}) {
  const { wrapper: MDXLayout } = Object.assign(
    {},
    _provideComponents(),
    props.components
  );
  return MDXLayout ? (
    <MDXLayout {...props}>
      <_createMdxContent {...props} />
    </MDXLayout>
  ) : (
    _createMdxContent(props)
  );
}
export default MDXContent;
"
`;
